{
	"name": "janolaw/janolawservice",
	"description": "Janolaw Service module is used for individual generation and automatic update of legal documents for online presence, blogs and online shops / online sale in Germany.",
	"license": [
		"GPL-2.0+"
	],
	"type": "typo3-cms-extension",
	"keywords": [
		"TYPO3 CMS",
		"janolaw"
	],
	"homepage": "https://www.janolaw.de",
	"support": {
		"issues": "https://github.com/nerdyjan/typo3-janolawservice/issues",
		"source": "https://github.com/nerdyjan/typo3-janolawservice"
	},
	"require": {
		"php": ">= 8.1 < 8.5",
		"ext-json": "*",
		"typo3/cms-core": "^12.4.2 || ^13.1"
	},
	"require-dev": {
		"friendsofphp/php-cs-fixer": "^3.47.1",
		"phpunit/phpunit": "^10.5",
		"seld/jsonlint": "^1.8.3",
		"helmich/typo3-typoscript-parser": "*",
		"squizlabs/php_codesniffer": "^3.6.1",
		"symfony/yaml": "^4.4.29 || ^5.3.6 || ^6.0",
		"typo3/coding-standards": "^0.5.3",
		"typo3/testing-framework": "^8.0.9"
	},
	"prefer-stable": true,
	"autoload": {
		"psr-4": {
			"Janolaw\\Janolawservice\\": "Classes"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"Janolaw\\Janolawservice\\Tests\\": "Tests"
		}
	},
	"config": {
		"allow-plugins": {
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true,
			"phpstan/extension-installer": true
		},
		"bin-dir": ".Build/bin",
		"platform": {},
		"preferred-install": {
			"typo3/cms-core": "source"
		},
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"typo3/cms": {
			"app-dir": ".Build",
			"extension-key": "janolawservice",
			"web-dir": ".Build/Web"
		}
	},
	"scripts": {
		"post-autoload-dump": [
			"@link-extension"
		],
		"ci": [
			"@ci:static"
		],
		"ci:json:lint": "find . ! -path '*.Build/*' ! -path '*Resources/Private/node_modules/*' -name '*.json' | xargs php .Build/vendor/seld/jsonlint/bin/jsonlint -q",
		"ci:php": [
			"@ci:php:copypaste",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan"
		],
		"ci:php:copypaste": "@php ./tools/phpcpd Classes Configuration Tests",
		"ci:php:cs-fixer": "php-cs-fixer fix --config .php-cs-fixer.php -v --dry-run --using-cache no --diff",
		"ci:php:lint": "find *.php Classes Configuration Tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l",
		"ci:php:sniff": "phpcs Classes Configuration Tests",
		"ci:static": [
			"@ci:json:lint",
			"@ci:php:copypaste",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan",
			"@ci:ts:lint",
			"@ci:yaml:lint"
		],
		"ci:tests": [
			"@ci:tests:unit",
			"@ci:tests:functional"
		],
		"ci:tests:functional": "Build/Scripts/runTests.sh -s functional",
		"ci:tests:unit": "Build/Scripts/runTests.sh -s unit",
		"docs:generate": [
			"docker run --rm -v $(pwd):/project ghcr.io/typo3-documentation/render-guides:latest --progress --config ./Documentation"
		],
		"fix:php": [
			"@fix:php:cs",
			"@fix:php:sniff"
		],
		"fix:php:cs": "php-cs-fixer fix --config .php-cs-fixer.php",
		"fix:php:sniff": "phpcbf Classes Configuration Tests",
		"link-extension": [
			"@php -r 'is_dir($extFolder=__DIR__.\"/.Build/Web/typo3conf/ext/\") || mkdir($extFolder, 0777, true);'",
			"@php -r 'file_exists($extFolder=__DIR__.\"/.Build/Web/typo3conf/ext/janolawservice\") || symlink(__DIR__,$extFolder);'"
		]
	},
	"scripts-descriptions": {
		"ci": "Runs all dynamic and static code checks.",
		"ci:php": "Runs all static checks for the PHP files.",
		"ci:php:copypaste": "Checks for copy'n'pasted PHP code.",
		"ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
		"ci:php:lint": "Lints the PHP files for syntax errors.",
		"ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
		"ci:static": "Runs all static code checks (syntax, style, types).",
		"ci:tests": "Runs all PHPUnit tests (unit and functional).",
		"ci:tests:functional": "Runs the functional tests.",
		"ci:tests:unit": "Runs the unit tests.",
		"docs:generate": "Renders the extension ReST documentation.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:sniff": "Fixes the code style with PHP_CodeSniffer."
	}
}
